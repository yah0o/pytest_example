class RequestConstants:
    class Parameters:
        class OPTIONAL:
            pass

    class ContentTypes:
        JSON = 'application/json'
        JSON_UTF8 = 'application/json;charset=utf-8'
        MSG_PACK = 'application/msgpack'
        MSG_PACK_UTF8 = 'application/msgpack;charset=utf-8'
        URL_ENCODED = 'application/x-www-form-urlencoded'
        FORM_DATA = 'multipart/form-data'

        ALL = [JSON, JSON_UTF8, MSG_PACK, MSG_PACK_UTF8, URL_ENCODED]

    class PaymentGroupID:
        DEFAULT = 1
        IGP = 2
        NON_REVERSE = 3
        LOCAL_CURRENCY = 4


class ResponseMessage(object):
    INVALID_PRODUCT_QUANTITY_MESSAGE = "Product [{0}] (title [{1}]) has a fixed price, " \
                                       "but has quantity {2} != {3}"
    NO_PAYMENT_TYPE = "No payment type in purchase request"
    PAYMENT_TYPE_EXPECTED_MISMATCH = "PAYMENT_TYPE_EXPECTED_MISMATCH"
    PROFILE_NOT_FOUND = "PROFILE_NOT_FOUND"
    INVALID_PROFILE_ID = "INVALID_PROFILE_ID"
    INVALID_PAYER_WGID = "INVALID_PAYER_WGID"
    INVALID_RECEIVER_WGID = "INVALID_RECEIVER_WGID"
    INVALID_WGID = "INVALID_WGID"
    SRC_PROFILE_MUSTNT_EQUAL_DEST_PROFILE = "SOURCE_PROFILE_MUST_NOT_EQUAL_DEST_PROFILE"
    ERROR = 'ERROR'
    NO_PRODUCTS = 'NO_PRODUCTS'
    NO_COUNTRY = 'NO_COUNTRY'
    LESS_THAN_ZERO = 'LESS_THAN_ZERO'
    ORDER_DOESNOT_EXIST = 'ORDER_DOESNOT_EXIST'
    CLIENT_ERROR_404 = 'CLIENT_ERROR_404'
    INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS'
    INVALID_DESTINATION_PROFILE_ID = 'INVALID_DESTINATION_PROFILE_ID'
    PRODUCT_NOT_FOUND = 'PRODUCT_NOT_FOUND'
    INVALID_PRODUCT_CODE = 'INVALID_PRODUCT_CODE'
    INVALID_PRODUCT_AMOUNT = 'INVALID_PRODUCT_AMOUNT'
    STOREFRONT_NOT_DEFINED = 'STOREFRONT_NOT_DEFINED'
    PRODUCT_NOT_ALLOWED = 'PRODUCT_NOT_ALLOWED'
    EXPECTED_PRICE_MISMATCH = 'EXPECTED_PRICE_MISMATCH'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    NULL_PRODUCT = 'NULL_PRODUCT'
    COUNTRY_EXPECTED_MISMATCH = 'COUNTRY_EXPECTED_MISMATCH'
    COUNTRY_NOT_DEFINED = 'COUNTRY_NOT_DEFINED'
    INVALID_PRODUCT_QUANTITY = 'INVALID_PRODUCT_QUANTITY'
    ORDER_PROCESSING_ERROR = 'ORDER_PROCESSING_ERROR'
    MISSING_PARAMETER = 'MISSING_PARAMETER'
    USER_BIND_DOESNOT_EXIST = 'USER_BIND_DOESNOT_EXIST'
    INVALID_PARAMETER_FORMAT = 'INVALID_PARAMETER_FORMAT'
    PAYMENT_METHOD_DOESNOT_EXIST = 'PAYMENT_METHOD_DOESNOT_EXIST'
    UNKNOWN_CURRENCY_CODE = 'UNKNOWN_CURRENCY_CODE'
    INVALID_CURRENCY_CODE = 'INVALID_CURRENCY_CODE'
    INVALID_AMOUNT = 'INVALID_AMOUNT'
    NULL_TRANSACTION_ID = 'NULL_TRANSACTION_ID'
    INSUFFICIENT_QUANTITY_TO_HOLD = 'INSUFFICIENT_QUANTITY_TO_HOLD'
    INVALID_ENTITLEMENT_CODE = 'INVALID_ENTITLEMENT_CODE'
    INVALID_ENTITLEMENT_FOR_TITLE = 'INVALID_ENTITLEMENT_FOR_TITLE'
    LANGUAGE_NOT_DEFINED = "LANGUAGE_NOT_DEFINED"
    INVALID_QUANTITY = "INVALID_QUANTITY"
    PAYER_COUNTRY_NOT_DEFINED = "PAYER_COUNTRY_NOT_DEFINED"
    NOT_IN_STOREFRONT = "NOT_IN_STOREFRONT"
    STOREFRONT_NOT_FOUND = "STOREFRONT_NOT_FOUND"
    UNABLE_TO_PROCESS_JSON = "Unable to process JSON"
    INVALID_PROJECT = "INVALID_PROJECT"
    REQUIRED_PROJECT = "Request requires 'project'"
    INVALID_BAN_TYPE = "INVALID_BAN_TYPE"
    REQUIRED_BAN_TYPE = "Request requires 'ban_type'"
    GET_ACCOUNTS_PROFILE_NOT_FOUND = 'GET_ACCOUNTS_PROFILE_NOT_FOUND'
    UNKNOWN_PRODUCT = 'UNKNOWN_PRODUCT'
    INVALID_CURRENCY_AMOUNT = 'INVALID_CURRENCY_AMOUNT'
    COMMON_EXCEPTION = "EXCEPTION"
    VARIABLE_PRICE_ZERO = 'VARIABLE_PRICE_ZERO'
    PRODUCT_VALIDATION_ERROR = 'PRODUCT_VALIDATION_ERROR'
    PRODUCT_NOT_GIFTABLE = 'PRODUCT_NOT_GIFTABLE'
    # entitlement contracts errors
    ENTITLEMENT_ILLEGAL_STATE_ERROR = 'entitlements.entitlement-illegal-state-error.v2'
    COMMON_VALIDATION_ERROR = 'common.v1.validation-error'
    ENTITLEMENT_NOT_FOUND = 'entitlements.entitlement-not-found.v1'
    CLIENT_PAYMENT_METHOD_NOT_FOUND = 'CLIENT_PAYMENT_METHOD_NOT_FOUND'
    PARTNER_PAYMENT_METHODS_NOT_FOUND = 'PARTNER_PAYMENT_METHODS_NOT_FOUND'

    @staticmethod
    def invalid_product_quantity_msg(product, title, quantity, quantity_real):
        return ResponseMessage.INVALID_PRODUCT_QUANTITY_MESSAGE.format(product, title, quantity, quantity_real)
